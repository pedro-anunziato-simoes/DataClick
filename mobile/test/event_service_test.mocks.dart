// Mocks generated by Mockito 5.4.6 from annotations
// in mobile/test/event_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import '../../mobile/lib/api/api_client.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i3.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  void setAuthToken(String? token) => super.noSuchMethod(
        Invocation.method(#setAuthToken, [token]),
        returnValueForMissingStub: null,
      );

  _i5.Future<_i2.Response> get(String? endpoint, {bool? includeAuth = true}) =>
      (super.noSuchMethod(
        Invocation.method(#get, [endpoint], {#includeAuth: includeAuth}),
        returnValue: _i5.Future<_i2.Response>.value(
          _FakeResponse_0(
            this,
            Invocation.method(
              #get,
              [endpoint],
              {#includeAuth: includeAuth},
            ),
          ),
        ),
      ) as _i5.Future<_i2.Response>);

  _i5.Future<_i2.Response> post(
    String? endpoint, {
    dynamic body,
    bool? includeAuth = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {#body: body, #includeAuth: includeAuth},
        ),
        returnValue: _i5.Future<_i2.Response>.value(
          _FakeResponse_0(
            this,
            Invocation.method(
              #post,
              [endpoint],
              {#body: body, #includeAuth: includeAuth},
            ),
          ),
        ),
      ) as _i5.Future<_i2.Response>);

  _i5.Future<_i2.Response> put(
    String? endpoint, {
    dynamic body,
    bool? includeAuth = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {#body: body, #includeAuth: includeAuth},
        ),
        returnValue: _i5.Future<_i2.Response>.value(
          _FakeResponse_0(
            this,
            Invocation.method(
              #put,
              [endpoint],
              {#body: body, #includeAuth: includeAuth},
            ),
          ),
        ),
      ) as _i5.Future<_i2.Response>);

  _i5.Future<_i2.Response> delete(
    String? endpoint, {
    bool? includeAuth = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#delete, [endpoint], {#includeAuth: includeAuth}),
        returnValue: _i5.Future<_i2.Response>.value(
          _FakeResponse_0(
            this,
            Invocation.method(
              #delete,
              [endpoint],
              {#includeAuth: includeAuth},
            ),
          ),
        ),
      ) as _i5.Future<_i2.Response>);
}
